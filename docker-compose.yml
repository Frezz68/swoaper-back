version: '3.1'

services:
  php:
    container_name: swoaper-php
    build:
      context: ./.docker/php/
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/var/www/html
    links:
      - database
    networks:
      - backend

  ###> doctrine/doctrine-bundle ###
  #database:
  #    container_name: api_database
  #    image: mysql:${MYSQL_VERSION}
  #    restart: always
  #    environment:
  #        MYSQL_RANDOM_ROOT_PASSWORD: yes
  #        MYSQL_DATABASE: "${DB_NAME}"
  #        MYSQL_USER: "${DB_USER}"
  #        MYSQL_PASSWORD: "${DB_PASSWORD}"
  #    command: [
  #          '--character-set-server=utf8mb4',
  #          '--collation-server=utf8mb4_unicode_ci',
  #          '--default-authentication-plugin=mysql_native_password'
  #        ]
  #    volumes:
  #        - ./.docker/database/:/var/lib/mysql:rw
  #    networks:
  #        - backend

  database:
    container_name: swoaper-database
    image: postgres:${DB_VERSION}
    restart: always
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    networks:
      - backend

  ###< doctrine/doctrine-bundle ###

  adminer:
    image: adminer
    restart: always
    environment:
      ADMINER_DEFAULT_SERVER: database
      ADMINER_DEFAULT_USER: ${DB_USER}
      ADMINER_DEFAULT_DB_NAME: ${DB_NAME}
    depends_on:
      - database
    networks:
      - backend
    ports:
      - 8080:8080

  #phpmyadmin:
  #    container_name: api_phpmyadmin
  #    image: phpmyadmin
  #    restart: always
  #    environment:
  #        PMA_ARBITRARY: 1
  #        PMA_HOST: database
  #        PMA_USER: "${DB_USER}"
  #        PMA_PASSWORD: "${DB_PASSWORD}"
  #    depends_on:
  #        - database
  #    networks:
  #        - backend
  #    ports:
  #        - 8080:80

  nginx:
    container_name: swoaper-proxy
    image: nginx:latest
    restart: always
    volumes:
      - .:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - database
    networks:
      - backend
    ports:
      - 80:80

networks:
  backend:
